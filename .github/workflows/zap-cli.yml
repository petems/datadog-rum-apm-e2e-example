name: ZAP Baseline Scan

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

concurrency:
  group: zap-baseline-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  zap:
    name: OWASP ZAP Baseline
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
      issues: write
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v3

      - name: Prepare .env for docker-compose
        run: |
          if [ ! -f .env ]; then
            if [ -f .env.example ]; then
              cp .env.example .env
            else
              printf "%s\n" \
                DD_SITE=datadoghq.com \
                DD_API_KEY=DUMMY \
                DD_CLIENT_TOKEN=dummy \
                DD_APPLICATION_ID=dummy \
                DD_SERVICE=datablog \
                DD_ENV=ci \
                DD_VERSION=2.0.0 > .env
            fi
          fi

      - name: Start stack (datablog + mongo)
        run: |
          docker compose -f docker-compose.yml up -d --build mongo datadog-agent datablog
          echo "Services started, checking status:"
          docker compose ps
          for i in {1..60}; do
            echo "Attempt $i/60: Checking if datablog is ready..."
            if curl -sf http://localhost:3000 >/dev/null; then 
              echo "✅ datablog is up and responding!"
              break
            fi
            echo "⏳ datablog not ready yet, waiting 2 seconds..."
            sleep 2
          done
          if [ $i -eq 60 ]; then
            echo "❌ datablog failed to start within 2 minutes"
            echo "Docker Compose status:"
            docker compose ps
            echo "Datablog container logs:"
            docker compose logs datablog || true
            echo "Mongo container logs:"
            docker compose logs mongo || true
            exit 1
          fi

      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          # Only create/update issues on pushes to main/master to avoid duplicates
          allow_issue_writing: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') }}
          issue_title: 'ZAP Baseline Report'
          # Use a unique, v4-safe artifact name (alnum, underscore, dot)
          artifact_name: "zap_scan_${{ github.run_id }}"
          token: ${{ secrets.GITHUB_TOKEN }}
          cmd_options: '-a'

      - name: Upload ZAP artifacts (fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap_scan_${{ github.run_id }}_fallback
          if-no-files-found: ignore
          path: |
            **/zap*.zip
            **/zap*.html
            **/zap*.md
            **/zap*.xml
            **/zap*.json

      - name: Stop stack
        if: always()
        run: |
          docker compose -f docker-compose.yml down -v
          echo "All services stopped"
