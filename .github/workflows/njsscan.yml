name: NodeJSSCAN (SAST)

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  njsscan:
    name: Static Analysis (njsscan)
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run njsscan (SARIF + missing-controls)
        uses: ajinabraham/njsscan-action@v7
        with:
          args: "--sarif --output njsscan.sarif --missing-controls ."

      - name: Run njsscan (JSON)
        if: always()
        uses: ajinabraham/njsscan-action@v7
        with:
          args: "--json --output njsscan.json --missing-controls ."

      - name: Run njsscan (HTML)
        if: always()
        uses: ajinabraham/njsscan-action@v7
        with:
          args: "--html --output njsscan-report.html --missing-controls ."

      - name: Ensure SARIF exists (njsscan)
        if: always()
        shell: bash
        run: |
          if [ ! -f njsscan.sarif ]; then
            printf '%s\n' \
              '{' \
              '  "$schema": "https://json.schemastore.org/sarif-2.1.0.json",' \
              '  "version": "2.1.0",' \
              '  "runs": [' \
              '    {' \
              '      "tool": { "driver": { "name": "njsscan" } },' \
              '      "results": []' \
              '    }' \
              '  ]' \
              '}' > njsscan.sarif
          fi

      - name: Upload SARIF (njsscan)
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: njsscan.sarif

      - name: Summarize njsscan findings
        if: always()
        shell: bash
        run: |
          json_count() {
            jq -r '.findings // .results // [] | length' "$1" 2>/dev/null || echo 0
          }

          sarif_total() {
            jq '[.runs[]?.results[]] | length' "$1" 2>/dev/null || echo 0
          }

          top_rules() {
            jq -r '[.runs[]?.results[]?.ruleId] | group_by(.) | map({rule: .[0], count: length}) | sort_by(-.count) | .[:5]' "$1" 2>/dev/null || echo '[]'
          }

          if command -v jq >/dev/null 2>&1; then
            TOTAL=$(sarif_total njsscan.sarif)
            TOP=$(top_rules njsscan.sarif)
          else
            TOTAL=unknown
            TOP='[]'
          fi

          echo "### njsscan Static Analysis" >> "$GITHUB_STEP_SUMMARY"
          echo "SARIF: njsscan.sarif" >> "$GITHUB_STEP_SUMMARY"
          echo "JSON: njsscan.json" >> "$GITHUB_STEP_SUMMARY"
          echo "HTML: njsscan-report.html" >> "$GITHUB_STEP_SUMMARY"
          echo "Findings total: ${TOTAL}" >> "$GITHUB_STEP_SUMMARY"
          echo "Top rules (ruleId:count):" >> "$GITHUB_STEP_SUMMARY"
          if command -v jq >/dev/null 2>&1; then
            echo "$TOP" | jq -r '.[] | "- \(.rule): \(.count)"' >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Upload njsscan artifacts (JSON/HTML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: njsscan-artifacts
          if-no-files-found: warn
          retention-days: 7
          path: |
            njsscan.json
            njsscan-report.html
